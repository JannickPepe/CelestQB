generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guide {
  id       Int        @id @default(autoincrement())
  title    String
  text     String
  date     DateTime
  image    String?
  comments comments[]
}

model Tip {
  id       Int        @id @default(autoincrement())
  title    String
  text     String
  date     DateTime
  image    String?
  comments comments[]
}

model ChatHistory {
  id         Int       @id @default(autoincrement())
  topicId    Int?
  question   String
  response   String?
  created_at DateTime? @default(now()) @db.Timestamp(6) @map("created_at")
  topics     Topic?    @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model comments {
  id         Int       @id @default(autoincrement())
  content    String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  guide_id   Int?
  tip_id     Int?
  user_name  String    @db.VarChar(255)
  Guide      Guide?    @relation(fields: [guide_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Tip        Tip?      @relation(fields: [tip_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Topic {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  description  String?
  chat_history ChatHistory[]
  genres      Genre[]     @relation("TopicGenres")
}

model Genre {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  topics  Topic[] @relation("TopicGenres")
}